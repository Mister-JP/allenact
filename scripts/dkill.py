import os
import argparse


def get_argument_parser():
    """Creates the argument parser."""

    # noinspection PyTypeChecker
    parser = argparse.ArgumentParser(
        description="dkill", formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )

    parser.add_argument(
        "screen_ids_file",
        type=str,
        help="Path to file generated by dmain.py with IPs and screen ids for nodes running process",
    )

    parser.add_argument(
        "--ssh_cmd",
        required=False,
        type=str,
        default="ssh {addr}",
        help="SSH command. Useful to utilize a pre-shared key with 'ssh -i mykey.pem ubuntu@{addr}'. ",
    )

    return parser


def get_args():
    """Creates the argument parser and parses any input arguments."""

    parser = get_argument_parser()
    args = parser.parse_args()

    return args


if __name__ == "__main__":
    args = get_args()

    with open(args.screen_ids_file, "r") as f:
        nodes = [tuple(line[:-1].split(" ")) for line in f.readlines()]

    print(f"Stopping processes on {nodes}")

    do_kill = ""
    while do_kill not in ["y", "n"]:
        do_kill = input("Kill processes? [y/N] ").lower()
        if do_kill == "":
            do_kill = "n"

    if do_kill == "y":
        for it, node in enumerate(nodes):
            addr, screen_name = node

            print(f"Killing screen {screen_name} on {addr}")

            ssh_command = (
                f"{args.ssh_cmd.format(addr=addr)} '"
                f"screen -S {screen_name} -p 0 -X quit ;"
                f"sleep 1 ;"
                f"ps aux | grep Master: ;"
                f"'"
            )

            print(f"SSH command {ssh_command}")
            os.system(ssh_command)
            print(f"{addr} {screen_name}")

        do_delete = ""
        while do_delete not in ["y", "n"]:
            do_delete = input("Delete file? [y/N] ").lower()
            if do_delete == "":
                do_delete = "n"

        if do_delete == "y":
            os.system(f"rm {args.screen_ids_file}")
            print(f"Deleted {args.screen_ids_file}")

    print("DONE")
